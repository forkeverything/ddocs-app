{"version":3,"sources":["checklist/make.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pages.js","sourcesContent":["Vue.component('checklist-make', {\n    name: 'checklistMake',\n    el: function() {\n        return '#checklist-make'\n    },\n    data: function() {\n        return {\n            checklistRecipient: '',\n            checklistName: '',\n            checklistDescription: '',\n            editingName: false,\n            files: [\n                {\n                    name: '',\n                    description: '',\n                    due: ''\n                }\n            ]\n        };\n    },\n    props: [],\n    computed: {\n        checklistNameText: function() {\n            if(this.checklistName) return this.checklistName;\n            return 'List Name';\n        }\n    },\n    methods: {\n        toggleEditingName: function() {\n            this.editingName = ! this.editingName;\n            if(this.editingName) {\n                this.$nextTick(function() {\n                    $('#input-checklist-name').focus();\n                });\n            }\n        },\n        addAnotherFileAfter: function(file) {\n            var fileIndex = _.indexOf(this.files, file);\n            var newFile = {\n                name: '',\n                description: '',\n                due: ''\n            };\n            this.files.splice(fileIndex + 1, 0, newFile);\n            this.$nextTick(function () {\n                $($('.single-file')[fileIndex + 1]).find('.input-file-name').focus();\n            });\n        },\n        removeFile: function(file) {\n            var fileIndex = _.indexOf(this.files, file);\n            if(! file.name && fileIndex !== 0) {\n                this.files.splice(fileIndex, 1);\n                this.$nextTick(function () {\n                    $($('.single-file')[fileIndex - 1]).find('.input-file-name').focus();\n                });\n            }\n        },\n        goTo: function(direction, file) {\n            var fileIndex = _.indexOf(this.files, file);\n            if(direction === 'prev') {\n                $($('.single-file')[fileIndex - 1]).find('.input-file-name').focus();\n            } else {\n                $($('.single-file')[fileIndex + 1]).find('.input-file-name').focus();\n            }\n        },\n        addFocus: function() {\n\n        }\n    },\n    events: {\n\n    },\n    ready: function() {\n        $(document).on('focus', '.input-file-name', function(){\n            $(this).parent().addClass('is-focused');\n        });\n\n        $(document).on('blur', '.input-file-name', function(){\n            $(this).parent().removeClass('is-focused');\n        });\n    }\n});"],"sourceRoot":"/source/"}