{"version":3,"sources":["ajax.js","autosize.js","vue/directives/datepicker.js","vue/directives/modal.js","vue/filters/dates/date-diff-human.js","vue/filters/dates/date-proper.js","vue/filters/dates/date-time.js","vue/filters/dates/date.js","vue/filters/dates/easy-date.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dependencies.js","sourcesContent":["$.ajaxSetup({\n    headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n    }\n});","$(document).ready(function () {\n    autosize($('.autosize'));\n});","Vue.directive('datepicker', {\n    params: ['button-only'],\n    bind: function() {\n        if(this.params.buttonOnly) {\n            $(this.el).datepicker({\n                dateFormat: \"dd/mm/yy\",\n                minDate: 0,\n                buttonImage: '/images/icons/calendar.png',\n                buttonImageOnly: true,\n                showOn: 'both'\n            });\n        } else {\n            $(this.el).datepicker({\n                dateFormat: \"dd/mm/yy\",\n                minDate: 0\n            });\n        }\n    }\n});","Vue.directive('modal', {\n    twoWay: true,\n    update: function () {\n        var self = this;\n        \n        $(this.el).click(function () {\n            self.set(false);\n        });\n\n        $(this.el).children().click(function (e) {\n            e.stopPropagation();\n        });\n    }\n});","Vue.filter('diffHuman', function (value) {\n    if(! value || value == '') return;\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").fromNow();\n    }\n    return value;\n});","Vue.filter('properDateModel', {\n    // model -> view\n    // formats the value when updating the input element.\n    read: function (value) {\n        if (value.replace(/\\s/g, \"\").length > 0) {\n            return moment(value, \"YYYY-MM-DD\").format('DD/MM/YYYY');\n        }\n        return value;\n    },\n    // view -> model\n    // formats the value when writing to the data.\n    write: function (val, oldVal) {\n        if(val.replace(/\\s/g, \"\").length > 0) {\n            return moment(val, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\");\n        }\n        return val;\n    }\n});","Vue.filter('dateTime', function (value) {\n    if(! value || value == '') return;\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").format('DD MMM YYYY, h:mm a');\n    }\n    return value;\n});\n","Vue.filter('date', function (value) {\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").format('DD/MM/YYYY');\n    }\n    return value;\n});","Vue.filter('easyDate', function (value) {\n    if(!value) return;\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").format('DD MMM YYYY');\n    }\n    return value;\n});\n\nVue.filter('easyDateModel', {\n    // model -> view\n    // formats the value when updating the input element.\n    read: function (value) {\n        console.log(value);\n        var date = moment(value, \"DD-MM-YYYY\");\n        if (value && date) {\n            return moment(value, \"DD-MM-YYYY\").format('DD MMM YYYY');\n        }\n        return value;\n    },\n    // view -> model\n    // formats the value when writing to the data.\n    write: function (val, oldVal) {\n        return val;\n    }\n});"],"sourceRoot":"/source/"}