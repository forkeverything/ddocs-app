{"version":3,"sources":["1.registration-modal.js","2.main.js"],"names":[],"mappingsxfile":"main.js","sourcesContent":["// bus for registration\nvar vueRegistrationEventBus = new Vue();\n\nVue.component('registration-modal', {\n    name: 'RegistrationModal',\n    template: '<div id=\"modal-register\" class=\"modal\" role=\"dialog\" v-el:modal-register>' +\n    '<div class=\"modal-dialog\">' +\n    '<div class=\"modal-content\">' +\n    '<div class=\"modal-header\">' +\n    '<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>' +\n    '<h2 class=\"modal-title text-center\">Create Account</h2>' +\n    '</div>' +\n    '<div class=\"modal-body\">' +\n    '<form-errors :event-bus=\"bus\"></form-errors>' +\n    '<form>' +\n    '<div class=\"form-group row\">' +\n    '<label class=\"col-xs-4 control-label text-right\">Name</label>' +\n    '<div class=\"col-xs-6\">' +\n    '<input type=\"text\" class=\"form-control\" name=\"name\" v-model=\"registerName\">' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"form-group row\">' +\n    '<label class=\"col-xs-4 control-label text-right\">Email</label>' +\n    '<div class=\"col-xs-6\">' +\n    '<input type=\"email\" class=\"form-control\" name=\"email\" v-model=\"registerEmail\">' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"form-group row\">' +\n    '<label class=\"col-xs-4 control-label text-right\">Password</label>' +\n    '<div class=\"col-xs-6\">' +\n    '<input type=\"password\" class=\"form-control\" name=\"password\" v-model=\"registerPassword\">' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"form-group row\">' +\n    '<label class=\"col-xs-4 control-label text-right\">Confirm Password</label>' +\n    '<div class=\"col-xs-6\">' +\n    '<input type=\"password\" class=\"form-control\" name=\"password_confirmation\" v-model=\"registerPasswordConfirmation\">' +\n    '</div>' +\n    '</div>' +\n    '</form>' +\n    '</div>' +\n    '<div class=\"modal-footer\">' +\n    '<button type=\"button\" class=\"btn btn-outline-grey btn-space\" data-dismiss=\"modal\">Cancel</button>' +\n    '<button type=\"button\" class=\"btn btn-solid-green\" @click=\"createAccount\">{{ registerButtonText }}</button>' +\n    '</div>' +\n    '</div>' +\n    '</div>' +\n    '</div>',\n    data: function () {\n        return {\n            ajaxReady: true,\n            bus: vueRegistrationEventBus,\n            registerName: '',\n            registerEmail: '',\n            registerPassword: '',\n            registerPasswordConfirmation: ''\n        };\n    },\n    props: [],\n    computed: {\n        registerButtonText: function() {\n            if(this.ajaxReady) return 'Save';\n            return 'Saving...';\n        }\n    },\n    methods: {\n        createAccount: function () {\n            var self = this;\n            self.registerButtonText = 'Saving...';\n            vueClearValidationErrors(vueRegistrationEventBus);\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/register',\n                method: 'POST',\n                data: {\n                    \"name\": self.registerName,\n                    \"email\": self.registerEmail,\n                    \"password\": self.registerPassword,\n                    \"password_confirmation\": self.registerPasswordConfirmation\n                },\n                success: function (data) {\n                    $(self.$els.modalRegister).modal('hide');\n                    vueGlobalEventBus.$emit('created-account');\n                },\n                error: function (response) {\n                    console.log(response);\n\n                    vueValidation(response, vueRegistrationEventBus);\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    ready: function () {\n        $(this.$els.modalRegister).modal({\n            backdrop: 'static',\n            show: false\n        });\n\n        vueGlobalEventBus.$on('show-registration-modal', function () {\n            $(this.$els.modalRegister).modal('show');\n        }.bind(this));\n    }\n});","// Create our global bus\nvar vueGlobalEventBus = new Vue();\nnew Vue({\n    el: '#landing',\n    data: {\n        ajaxReady: true,\n        checklistRecipient: '',\n        checklistName: '',\n        checklistDescription: '',\n        editingName: false,\n        files: [\n            {\n                name: '',\n                description: '',\n                due: '',\n                required: 1\n            }\n        ],\n        createdAccount: false\n    },\n    computed: {\n        checklistNameText: function () {\n            // Used to display a default when a name isn't given\n            if (this.checklistName) return this.checklistName;\n            return 'List Name';\n        },\n        validFiles: function () {\n            // Only return files with names\n            return _.filter(this.files, function (file) {\n                return file.name;\n            });\n        },\n        fileCount: function () {\n            return this.validFiles.length;\n        },\n        canSendChecklist: function () {\n            // Required fields...\n            return this.checklistRecipient && this.checklistName && this.fileCount > 0;\n        }\n    },\n    props: [],\n    methods: {\n        showRegisterModal: function () {\n            if (this.createdAccount) {\n                this.sendChecklist();\n            } else {\n                vueGlobalEventBus.$emit('show-registration-modal');\n            }\n        },\n        toggleEditingName: function () {\n            this.editingName = !this.editingName;\n            if (this.editingName) {\n                this.$nextTick(function () {\n                    $('#input-checklist-name').focus();\n                });\n            }\n        },\n        addAnotherFileAfter: function (file) {\n            var fileIndex = _.indexOf(this.files, file);\n            var newFile = {\n                name: '',\n                description: '',\n                due: '',\n                required: 1\n            };\n            this.files.splice(fileIndex + 1, 0, newFile);\n            this.$nextTick(function () {\n                $($('.single-file')[fileIndex + 1]).find('.input-file-name').focus();\n            });\n        },\n        removeFile: function (file) {\n            var fileIndex = _.indexOf(this.files, file);\n            if (!file.name && fileIndex !== 0) {\n                this.files.splice(fileIndex, 1);\n                this.$nextTick(function () {\n                    $($('.single-file')[fileIndex - 1]).find('.input-file-name').focus();\n                });\n            }\n        },\n        goTo: function (direction, file) {\n            var fileIndex = _.indexOf(this.files, file);\n            if (direction === 'prev') {\n                $($('.single-file')[fileIndex - 1]).find('.input-file-name').focus();\n            } else {\n                $($('.single-file')[fileIndex + 1]).find('.input-file-name').focus();\n            }\n        },\n        toggleRequired: function (file) {\n            file.required = file.required ? 0 : 1;\n        },\n        sendChecklist: function () {\n            var self = this;\n            vueClearValidationErrors();\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/checklist/make',\n                method: 'POST',\n                data: {\n                    recipient: self.checklistRecipient,\n                    name: self.checklistName,\n                    description: self.checklistDescription,\n                    requested_files: self.validFiles\n                },\n                success: function (data) {\n                    location.href = \"/checklist/\" + data;\n                },\n                error: function (response) {\n                    console.log(response);\n                    vueValidation(response);\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    ready: function () {\n        $(document).on('focus', '.input-file-name', function () {\n            $(this).parent().addClass('is-focused');\n        });\n\n        $(document).on('blur', '.input-file-name', function () {\n            $(this).parent().removeClass('is-focused');\n        });\n\n        vueGlobalEventBus.$on('created-account', function() {\n            this.createdAccount = true;\n            this.sendChecklist();\n        }.bind(this));\n    }\n});\n\n"],"sourceRoot":"/source/"}