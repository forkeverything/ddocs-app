{"version":3,"sources":["ajax.js","autosize.js","helpers.js","tooltip.js","datepicker.js","modal.js","dates/date-diff-human.js","dates/date-proper.js","dates/date-time.js","dates/date.js","dates/easy-date.js","form-errors.js","registration-modal.js","ga-tracker.js"],"names":[],"mappingslBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxxGA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dependencies.js","sourcesContent":["$.ajaxSetup({\n    headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n    }\n});","$(document).ready(function () {\n    autosize($('.autosize'));\n});","\n/**\n * Takes string and capitalizes the first letter\n * of each word.\n */\nfunction strCapitalize(str) {\n    return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n}\n\n/**\n * Escapes html entities for a string to be inserted\n * into the DOM.\n *\n * @type {{&: string, <: string, >: string, \": string, ': string, /: string}}\n */\nvar entityMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    \"/\": '&#x2F;'\n};\n\n/**\n * Escapes a given string that has HTML elements.\n *\n * @param string\n * @returns {string}\n */\nfunction escapeHtml(string) {\n    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n        return entityMap[s];\n    });\n}\n\n/**\n * Takes an AJAX response and vue instance\n * and emits form errors to be caught by\n * 'form-errors' Vue Component.\n *\n * @param response\n * @param vue\n */\nfunction vueValidation(response, vue) {\n    if(response.status === 422) {\n        var eventBus = vue || vueGlobalEventBus;\n        eventBus.$emit('new-errors', response.responseJSON);\n    }\n}\n\n/**\n * Broadcasts clear errors event.\n *\n * @param vue\n */\nfunction vueClearValidationErrors(vue) {\n    var eventBus = vue || vueGlobalEventBus;\n    eventBus.$emit('clear-errors');\n}\n\n/**\n * Takes an string and tells you if it's a valid email!\n *\n * @returns {boolean}\n * @param string\n */\nfunction validateEmail(string) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(string);\n}\n\n/**\n * Returns whether given string is all\n * alphanumeric (no symbols).\n *\n * @returns {boolean}\n * @param string\n */\nfunction alphaNumeric(string) {\n    var re = /^[A-Za-z\\d\\s]+$/;\n    return re.test(string);\n}\n\n/**\n * Retrieves the Query String Value by\n * Name\n * \n * @param name\n * @param url\n * @returns {*}\n */\nfunction getParameterByName(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\"),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n/**\n * Takes a 2 Strings (name, value) pair or an Object containing\n * several name-value pairs and updates the current query\n * and returns it.\n * \n * @returns {string}\n */\nfunction updateQueryString() {\n    // Get and prep existing query so we can make changes to it\n    var fullQuery = window.location.href.split('?')[1];         // into pairs\n    var queryArray = fullQuery ? fullQuery.split('&') : [];     // into key-values\n    var queryObj = {};                                          // empty object\n\n    // Build up object\n    queryArray.forEach(function (item) {\n        var x = item.split('=');\n        queryObj[x[0]] = x[1];\n    });\n\n    /**\n     * Make Updates to query\n     * TO DO ::: CHECK HERE\n     */\n    if (typeof arguments[0] === 'string' && arguments.length > 1) {\n        // Only update single query name - set the new name and value\n        queryObj[arguments[0]] = URIEncoder(arguments[1]);\n    } else if(typeof arguments[0] === 'object'){\n        // Received an object with key-value pairs of query names and value to update\n        _.forEach(arguments[0], function (value, key) {\n            if(value) {\n                queryObj[key] = URIEncoder(value);\n            } else {\n                delete queryObj[key];\n            }\n        });\n    } else {\n        // only received a key - delete from query\n        delete queryObj[arguments[0]];\n    }\n\n    // Make new query to return\n    var newQuery = '';\n    // Go through object and add everything back as a string\n    _.forEach(queryObj, function (value, name) {\n        newQuery += name + '=' + value + '&';\n    });\n    // Finally - return our new string!\n    return newQuery.substring(0, newQuery.length - 1);  // Trim last '&'\n}\n\n/**\n * Wrapper function for encodeURI that also accepts\n * an array and encodes each part before joining\n * them together with a '+'\n *\n * @param value\n * @returns {*}\n * @constructor\n */\nfunction URIEncoder(value) {\n    if(value.constructor === Array)  {\n        value = _.map(value, function (i) { if(i && i.replace(/\\s/g, \"\").length > 0) return encodeURI(i); }).join('+');\n    } else {\n        value = encodeURI(value)\n    }\n    return value;\n}\n\n/**\n * When browser has pop-state (ie back / forward)\n * run this function to re-retrieve the data\n *\n * @param callback\n */\nfunction onPopCallFunction(callback)\n{\n    window.onpopstate = function (e) {\n        if (e.state) {\n            callback();\n        }\n    }\n}\n\n/**\n * Takes a query string and if it is  different to\n * the current query string, it will update the\n * browsers state, so we can use nav buttons\n * \n * @param query\n */\nfunction pushStateIfDiffQuery(query) {\n    if (query && query !== window.location.href.split('?')[1]) {\n        window.history.pushState({}, \"\", '?' + query);\n    }\n}\n\n/**\n * Formats a number into comma-separated thousands\n * @param val\n * @returns {*}\n */\nfunction formatNumber(val) {\n    if(isNaN(parseFloat(val))) return val;\n    //Seperates the components of the number\n    var n = val.toString().split(\".\");\n    //Comma-fies the first part\n    n[0] = n[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    //Combines the two sections\n    return n.join(\".\");\n}\n\n/**\n * Checks if a given value is a numeric (ie. a number)\n * @param n\n * @returns {boolean}\n */\nfunction isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}","$(function () {\n    $('[data-toggle=\"tooltip\"]').tooltip()\n})","Vue.directive('datepicker', {\n    params: ['button-only'],\n    bind: function() {\n        if(this.params.buttonOnly) {\n            $(this.el).datepicker({\n                dateFormat: \"dd/mm/yy\",\n                minDate: 0,\n                buttonImage: '/images/icons/calendar.png',\n                buttonImageOnly: true,\n                showOn: 'both'\n            });\n        } else {\n            $(this.el).datepicker({\n                dateFormat: \"dd/mm/yy\",\n                minDate: 0\n            });\n        }\n    }\n});","Vue.directive('modal', {\n    twoWay: true,\n    update: function () {\n        var self = this;\n        \n        $(this.el).click(function () {\n            self.set(false);\n        });\n\n        $(this.el).children().click(function (e) {\n            e.stopPropagation();\n        });\n    }\n});","Vue.filter('diffHuman', function (value) {\n    if(! value || value == '') return;\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").fromNow();\n    }\n    return value;\n});","Vue.filter('properDateModel', {\n    // model -> view\n    // formats the value when updating the input element.\n    read: function (value) {\n        if (value.replace(/\\s/g, \"\").length > 0) {\n            return moment(value, \"YYYY-MM-DD\").format('DD/MM/YYYY');\n        }\n        return value;\n    },\n    // view -> model\n    // formats the value when writing to the data.\n    write: function (val, oldVal) {\n        if(val.replace(/\\s/g, \"\").length > 0) {\n            return moment(val, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\");\n        }\n        return val;\n    }\n});","Vue.filter('dateTime', function (value) {\n    if(! value || value == '') return;\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").format('DD MMM YYYY, h:mm a');\n    }\n    return value;\n});\n","Vue.filter('date', function (value) {\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").format('DD/MM/YYYY');\n    }\n    return value;\n});","Vue.filter('easyDate', function (value) {\n    if(!value) return;\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").format('DD MMM YYYY');\n    }\n    return value;\n});\n\nVue.filter('easyDateModel', {\n    // model -> view\n    // formats the value when updating the input element.\n    read: function (value) {\n        console.log(value);\n        var date = moment(value, \"DD-MM-YYYY\");\n        if (value && date) {\n            return moment(value, \"DD-MM-YYYY\").format('DD MMM YYYY');\n        }\n        return value;\n    },\n    // view -> model\n    // formats the value when writing to the data.\n    write: function (val, oldVal) {\n        return val;\n    }\n});","Vue.component('form-errors', {\n    template: '<div class=\"validation-errors\" v-show=\"errors.length > 0\">' +\n    '<ul class=\"errors-list list-unstyled\"' +\n    'v-show=\"errors.length > 0\"' +\n    '>' +\n    '<li v-for=\"error in errors\">{{ error }}</li>' +\n    '</ul>' +\n    '</div>',\n    data: function () {\n        return {\n            errors: []\n        }\n    },\n    props: ['event-bus'],\n    ready: function() {\n        var self = this;\n\n        var eventBus = this.eventBus || vueGlobalEventBus;\n\n        eventBus.$on('new-errors', function (errors) {\n            var newErrors = [];\n            _.forEach(errors, function (error) {\n                if (newErrors.indexOf(error[0]) == -1) newErrors.push(error[0]);\n            });\n            self.errors = newErrors;\n        });\n\n        eventBus.$on('clear-errors', function(errors) {\n            self.errors = [];\n        });\n    }\n});","// bus for registration\nvar vueRegistrationEventBus = new Vue();\n\nVue.component('registration-modal', {\n    name: 'RegistrationModal',\n    template: '<div id=\"modal-register\" class=\"modal\" role=\"dialog\" v-el:modal-register>' +\n    '<div class=\"modal-dialog\">' +\n    '<div class=\"modal-content\">' +\n    '<div class=\"modal-header\">' +\n    '<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>' +\n    '<h2 class=\"modal-title text-center\">Create Account</h2>' +\n    '</div>' +\n    '<div class=\"modal-body\">' +\n    '<form-errors :event-bus=\"bus\"></form-errors>' +\n    '<form>' +\n    '<div class=\"form-group row\">' +\n    '<label class=\"col-xs-4 control-label text-right\">Name</label>' +\n    '<div class=\"col-xs-6\">' +\n    '<input type=\"text\" class=\"form-control\" name=\"name\" v-model=\"registerName\">' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"form-group row\">' +\n    '<label class=\"col-xs-4 control-label text-right\">Email</label>' +\n    '<div class=\"col-xs-6\">' +\n    '<input type=\"email\" class=\"form-control\" name=\"email\" v-model=\"registerEmail\">' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"form-group row\">' +\n    '<label class=\"col-xs-4 control-label text-right\">Password</label>' +\n    '<div class=\"col-xs-6\">' +\n    '<input type=\"password\" class=\"form-control\" name=\"password\" v-model=\"registerPassword\">' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"form-group row\">' +\n    '<label class=\"col-xs-4 control-label text-right\">Confirm Password</label>' +\n    '<div class=\"col-xs-6\">' +\n    '<input type=\"password\" class=\"form-control\" name=\"password_confirmation\" v-model=\"registerPasswordConfirmation\">' +\n    '</div>' +\n    '</div>' +\n    '</form>' +\n    '</div>' +\n    '<div class=\"modal-footer\">' +\n    '<button type=\"button\" class=\"btn btn-outline-grey btn-space\" data-dismiss=\"modal\">Cancel</button>' +\n    '<button type=\"button\" class=\"btn btn-solid-green\" @click=\"createAccount\">{{ registerButtonText }}</button>' +\n    '</div>' +\n    '</div>' +\n    '</div>' +\n    '</div>',\n    data: function () {\n        return {\n            ajaxReady: true,\n            bus: vueRegistrationEventBus,\n            registerName: '',\n            registerEmail: '',\n            registerPassword: '',\n            registerPasswordConfirmation: ''\n        };\n    },\n    props: [],\n    computed: {\n        registerButtonText: function() {\n            if(this.ajaxReady) return 'Save';\n            return 'Saving...';\n        }\n    },\n    methods: {\n        createAccount: function () {\n            var self = this;\n            self.registerButtonText = 'Saving...';\n            vueClearValidationErrors(vueRegistrationEventBus);\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/register',\n                method: 'POST',\n                data: {\n                    \"name\": self.registerName,\n                    \"email\": self.registerEmail,\n                    \"password\": self.registerPassword,\n                    \"password_confirmation\": self.registerPasswordConfirmation\n                },\n                success: function (data) {\n                    $(self.$els.modalRegister).modal('hide');\n                    vueGlobalEventBus.$emit('created-account');\n                },\n                error: function (response) {\n                    console.log(response);\n\n                    vueValidation(response, vueRegistrationEventBus);\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    ready: function () {\n        $(this.$els.modalRegister).modal({\n            backdrop: 'static',\n            show: false\n        });\n\n        vueGlobalEventBus.$on('show-registration-modal', function () {\n            $(this.$els.modalRegister).modal('show');\n        }.bind(this));\n    }\n});","(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\nga('create', 'UA-82446082-1', 'auto');\nga('send', 'pageview');"],"sourceRoot":"/source/"}